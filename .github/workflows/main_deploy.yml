name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
frontend:
    install:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Set Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 18.x

        - name: Run install root
          uses: borales/actions-yarn@v4
          with:
            cmd: install --frozen-lockfile # will run `yarn install  --frozen-lockfile` command

        - name: Run install in thin-backend
          uses: borales/actions-yarn@v4
          with:
            cmd: install --frozen-lockfile
            dir: 'thin-backend' # will run `yarn install --frozen-lockfile` in `thin-backend` sub folder

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          id: yarn-cache
          with:
            path: |
              node_modules
              thin-backend/node_modules
            key: node-cache-${{ runner.OS }}-yarn-${{ hashFiles('./package.json') }}
            restore-keys: |
              node-cache-${{ runner.OS }}-yarn-${{ hashFiles('./package.json') }}
    build:
      needs: install
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          id: yarn-cache
          with:
            path: |
              node_modules
              thin-backend/node_modules
            key: node-cache-${{ runner.OS }}-yarn-${{ hashFiles('./package.json') }}
            restore-keys: |
              node-cache-${{ runner.OS }}-yarn-${{ hashFiles('./package.json') }}

        - name: Build production bundle
          uses: borales/actions-yarn@v4
          with:
            cmd: build # will run `yarn build` command

        - name: Upload current build
          uses: actions/upload-artifact@v3
          with:
            name: save-state-with-build
            if-no-files-found: error
            path: |
              thin-backend/dist

  frontend:
    install:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Set Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 18.x

        - name: Run install root
          uses: borales/actions-yarn@v4
          with:
            cmd: install --frozen-lockfile # will run `yarn install  --frozen-lockfile` command

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          id: yarn-cache
          with:
            path: |
              node_modules
              thin-backend/node_modules
            key: node-cache-${{ runner.OS }}-yarn-${{ hashFiles('./package.json') }}
            restore-keys: |
              node-cache-${{ runner.OS }}-yarn-${{ hashFiles('./package.json') }}
    build:
      needs: install
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          id: yarn-cache
          with:
            path: |
              node_modules
              thin-backend/node_modules
            key: node-cache-${{ runner.OS }}-yarn-${{ hashFiles('./package.json') }}
            restore-keys: |
              node-cache-${{ runner.OS }}-yarn-${{ hashFiles('./package.json') }}

        - name: Build production bundle
          uses: borales/actions-yarn@v4
          with:
            cmd: build:frontend # will run `yarn build:frontend` command

        - name: Upload current build
          uses: actions/upload-artifact@v3
          with:
            name: save-state-with-build
            if-no-files-found: error
            path: |
              build

    test:
      needs: install
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          id: yarn-cache
          with:
            path: |
              node_modules
              thin-backend/node_modules
            key: node-cache-${{ runner.OS }}-yarn-${{ hashFiles('./package.json') }}
            restore-keys: |
              node-cache-${{ runner.OS }}-yarn-${{ hashFiles('./package.json') }}

        - name: Test React
          uses: borales/actions-yarn@v4
          with:
            cmd: test # will run `yarn test` command

  deploy:
    runs-on: ubuntu-latest
    if: github.event.push
    needs: call-base-workflow
    steps:
      - uses: actions/checkout@v3

      - name: Set Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            node_modules
            thin-backend/node_modules
          key: node-cache-${{ runner.OS }}-yarn-${{ hashFiles('./package.json') }}
          restore-keys: |
            node-cache-${{ runner.OS }}-yarn-${{ hashFiles('./package.json') }}

      - name: Get root build
        uses: actions/download-artifact@v3
        with:
          name: save-state-with-build
          path: build

      - name: Deploy build folder to production
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./build
