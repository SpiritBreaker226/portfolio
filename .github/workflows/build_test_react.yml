name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: |
            yarn.lock
            thin-backend/yarn.lock
            
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.json') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.json') }}
            ${{ runner.os }}-yarn-cache-

      - name: Run install root
        uses: borales/actions-yarn@v4
        with:
          cmd: install --frozen-lockfile # will run `yarn install  --frozen-lockfile` command
        
      - name: Run install in thin-backend 
        uses: borales/actions-yarn@v4
        with:
          cmd: install --frozen-lockfile
          dir: 'thin-backend' # will run `yarn install --frozen-lockfile` in `thin-backend` sub folder
  build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.json') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.json') }}
            ${{ runner.os }}-yarn-cache-
            
      - name: Build production bundle
        uses: borales/actions-yarn@v4
        with:
          cmd: build # will run `yarn build` command
          
      - name: Upload current build
        uses: actions/upload-artifact@v2
        with:
          name: save-state-with-build
          path: build

  test:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.json') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.json') }}
            ${{ runner.os }}-yarn-cache-
    
      - name: Test React
        uses: borales/actions-yarn@v4
        with:
          cmd: test # will run `yarn test` command

  deploy:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Upload current build
        uses: actions/upload-artifact@v3.1.2
        with:
          name: save-state-with-build
      
      - name: deploy to production
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_branch: main
          publish_dir: ./build
